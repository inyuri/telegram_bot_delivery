from telegram import InlineKeyboardButton, InlineKeyboardMarkup
from build_menu import build_menu
from data import db_session
from data.foods import Food

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î
db_session.global_init("db/users.db")
db_sess = db_session.create_session()

# –ö–Ω–æ–ø–∫–∏ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
button_list_main_menu = [
        InlineKeyboardButton("üìã –°–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑", callback_data='menu'),
        InlineKeyboardButton("ü§ó –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å", callback_data='profile'),
        InlineKeyboardButton("üìñ –ü—Ä–æ—Å–º–æ—Ç—Ä –º–µ–Ω—é", callback_data='look_menu'),
        InlineKeyboardButton("‚Ñπ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", callback_data='information')
    ]
main_menu_buttons = InlineKeyboardMarkup(build_menu(button_list_main_menu, n_cols=1))

# –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥"
back_button = InlineKeyboardMarkup(build_menu([InlineKeyboardButton("‚óÄ –ù–∞–∑–∞–¥", callback_data='back')], n_cols=1))

# –°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –¥–ª—è –º–µ–Ω—é —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞
button_list_menu_restaurant = []

for food in db_sess.query(Food).all():
    button_list_menu_restaurant.append(InlineKeyboardButton(food.food_title, callback_data=food.food_title))
button_list_menu_restaurant.append(InlineKeyboardButton("‚óÄ –ù–∞–∑–∞–¥", callback_data='back'))

menu_restaurant_buttons = InlineKeyboardMarkup(build_menu(button_list_menu_restaurant, n_cols=2))

# –°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –¥–ª—è –º–µ–Ω—é —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞ —Å –∫–Ω–æ–ø–∫–æ–π –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞
button_list_menu_order = []

for food in db_sess.query(Food).all():
    button_list_menu_order.append(InlineKeyboardButton(food.food_title, callback_data=food.food_title))
button_list_menu_order.append(InlineKeyboardButton("‚óÄ –ù–∞–∑–∞–¥", callback_data='back'))
button_list_menu_order.append(InlineKeyboardButton('‚úÖ –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑', callback_data='make_order'))

menu_order = InlineKeyboardMarkup(build_menu(button_list_menu_order, n_cols=2))

# –°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
all_food = [(food.food_title, food.description, food.price, food.path_img) for food in db_sess.query(Food).all()]

accept_list_menu = [
    InlineKeyboardButton("‚ùå –ù–µ—Ç", callback_data='no'),
    InlineKeyboardButton("‚úÖ –î–∞", callback_data='yes'),
]
accept_menu_buttons = InlineKeyboardMarkup(build_menu(accept_list_menu, n_cols=2))

# –°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –ø–µ—Ä–µ–ª–∏—Å—Ç—ã–≤–∞–Ω–∏—è
scroll_list_menu = [
    InlineKeyboardButton("‚óÄ", callback_data='prev'),
    InlineKeyboardButton("‚ñ∂Ô∏è", callback_data='next'),
    InlineKeyboardButton("‚óÄ –ù–∞–∑–∞–¥", callback_data='delete_scroll')
]
scroll_menu_buttons = InlineKeyboardMarkup(build_menu(scroll_list_menu, n_cols=2))

# –°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
admin_panel_menu = [
    InlineKeyboardButton("‚ûï –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–µ –±–ª—é–¥–æ", callback_data='add_pos_menu'),
    InlineKeyboardButton("‚ûñ –£–¥–∞–ª–∏—Ç—å –±–ª—é–¥–æ", callback_data='delete_pos_menu')
]
admin_panel_buttons = InlineKeyboardMarkup(build_menu(admin_panel_menu, n_cols=2))

# –°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
delete_pos_list = []
for food in db_sess.query(Food).all():
    delete_pos_list.append(InlineKeyboardButton(food.food_title, callback_data=food.food_title + '_delete'))
delete_pos_list.append(InlineKeyboardButton("‚óÄ –ù–∞–∑–∞–¥", callback_data='back_admin_panel'))
delete_pos_buttons = InlineKeyboardMarkup(build_menu(delete_pos_list, n_cols=2))
back_admin_panel_button = InlineKeyboardMarkup(build_menu([InlineKeyboardButton("‚óÄ –ù–∞–∑–∞–¥",
                                                          callback_data='back_admin_panel')],
                                                          n_cols=1))
